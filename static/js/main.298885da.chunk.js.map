{"version":3,"sources":["components/searchBar/SearchBox.js","components/searchBar/SearchButton.js","components/searchBar/index.js","components/participantBox/index.js","components/participantContainer/index.js","components/Dashboard/index.js","components/Login/index.js","components/MapView/index.js","components/router/index.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","_ref","onChange","_ref$placeholder","placeholder","react_default","a","createElement","className","SearchButton","onClick","children","SearchBar","searchBar_SearchBox","searchBar_SearchButton","Component","ParticipantBox","_ref$name","name","_ref$start","start","_ref$end","end","_ref$miles","miles","ParticipantContainer","Link","to","participantBox","Dashboard","searchBar_SearchBar","participantContainer_ParticipantContainer","React","Login","type","MapView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Date","changeStart","bind","assertThisInitialized","changeEnd","date","setState","es","selected","AppRouter","BrowserRouter","Route","path","exact","component","App","router","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.298885da.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const SearchBox = ({ onChange, placeholder = \"Search\" }) => (\n    <div className=\"search-box\">\n        <input\n            className=\"search-input\"\n            onChange={onChange}\n            placeholder={placeholder}\n        />\n    </div>\n);\n\nexport default SearchBox;\n","import React from \"react\";\n\nexport const SearchButton = ({ onClick, children }) => (\n    <div className=\"search-btn-container\">\n        <button className=\"search-btn\" onClick={onClick}>\n            {children}\n        </button>\n    </div>\n);\n\nexport default SearchButton;\n","import React, { Component } from \"react\";\nimport SearchBox from \"./SearchBox\";\nimport SearchButton from \"./SearchButton\";\n\nexport default class SearchBar extends Component {\n    render() {\n        return (\n            <div className=\"search-container\">\n                <SearchBox />\n                <SearchButton>Submit</SearchButton>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nexport const ParticipantBox = ({\n    name = \"PARTICPANT ID\",\n    start = \"10/12\",\n    end = \"Present\",\n    miles = 100\n}) => (\n    <div className=\"part-box\">\n        <div className=\"part-name\">{name}</div>\n        <div className=\"part-start\">Start Time: {start}</div>\n        <div className=\"part-end\">End Time:{end}</div>\n        <div className=\"part-miles\">Total Miles: {miles} mi</div>\n    </div>\n);\n\nexport default ParticipantBox;\n","import React, { Component } from \"react\";\nimport ParticipantBox from \"../participantBox\";\nimport { Link } from \"react-router-dom\";\nexport default class ParticipantContainer extends Component {\n    render() {\n        return (\n            <div className=\"part-container\">\n                <Link to=\"/map\"><ParticipantBox /></Link>\n                <Link to=\"/map\"><ParticipantBox /></Link>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../searchBar\";\nimport ParticipantContainer from \"../participantContainer\";\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Link to=\"/\">\n            <a>Signout</a>\n          </Link>\n          <SearchBar />\n          <ParticipantContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Login extends React.Component {\n  render() {\n    return (\n      <div>\n          <div className=\"login-form\">\n          <div className=\"input-box\">\n            <label>NetId</label>\n            <input type=\"text\" placeholder=\"Enter Netid\"></input>\n          </div>\n          <div className=\"input-box\">\n            <label>Password</label>\n            <input type=\"password\" placeholder=\"enter password\"></input>\n          </div>\n          <Link to=\"/dashboard\">\n            <button className=\"btn login\">Login</button>\n          </Link>\n      </div>\n    </div>\n\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\n\nexport default class MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: new Date(),\n      end: new Date()\n    }\n    this.changeStart = this.changeStart.bind(this);\n    this.changeEnd = this.changeEnd.bind(this);\n  }\n  changeStart(date) {\n   this.setState({\n     start: date\n   });\n }\n changeEnd(date) {\n   this.setState({\n     end: date\n   });\n }\n  render() {\n    return (\n      <div>\n        <Link to=\"/dashboard\"><a>Back</a></Link>\n        <div className=\"map-container\">\n\n          <div className=\"map\">Insert Map Here</div>\n            <div className=\"dates\">\n            <div><label>Start Date:</label>\n            <DatePicker\n            selected={this.state.start}\n            onChange={this.changeStart}/>\n            </div>\n            <div><label>End Date:</label>\n            <DatePicker\n            selected={this.state.start}\n            onChange={this.changeEnd}  />\n            </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\n\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport MapView from \"../MapView\";\n\nexport const AppRouter = () => (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/dashboard\" exact component={Dashboard}/>\n        <Route path=\"/map\" exact component={MapView}/>\n      </div>\n    </Router>\n);\n\nexport default AppRouter;\n","import React, { Component } from \"react\";\nimport \"./scss/App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AppRouter from \"./components/router\";\nclass App extends Component {\n    render() {\n        return (\n            <AppRouter/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}